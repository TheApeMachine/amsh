services:
  # cloudflared:
  #   image: cloudflare/cloudflared:latest
  #   command:
  #     - tunnel
  #     - --no-autoupdate
  #     - run
  #     - --token
  #     - eyJhIjoiMzJlMDRkYTVjYjJmNjBiOWEwY2FkNTczOGJmNDA2YzciLCJ0IjoiNjM0OGNmMTYtNDcwZi00OTFkLThkZmYtZmIwNGVkMTdhMDFmIiwicyI6Ik9EQTRPV0UzT0RBdFpqRmpPQzAwTnpkakxXRmlNamd0TnpjMlpEZzBOakV3T0RsbSJ9
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   links:
  #     - amsh-service:amsh.alliedmastercomputer.org
  #   depends_on:
  #     - amsh-service

  amsh-service:
    image: amsh
    env_file:
      - .env
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - MARVIN_APP_TOKEN=${MARVIN_APP_TOKEN}
      - MARVIN_BOT_TOKEN=${MARVIN_BOT_TOKEN}
      - MARVIN_USER_TOKEN=${MARVIN_USER_TOKEN}
      - AZDO_ORG_URL=${AZDO_ORG_URL}
      - AZDO_PAT=${AZDO_PAT}
      - GITHUB_PAT=${GITHUB_PAT}
      - NVIDIA_API_KEY=${NVIDIA_API_KEY}
      - TRENGO_API_TOKEN=${TRENGO_API_TOKEN}
    build:
      context: ./
      dockerfile: Dockerfile
      target: dev
      platforms:
        - linux/amd64
        - linux/arm64
    ports:
      - "8567:8567"
    volumes:
      - ./:/app

  # youi:
  #   image: youi
  #   build:
  #     context: ./youi
  #     dockerfile: Dockerfile
  #     target: dev
  #     platforms:
  #       - linux/amd64
  #       - linux/arm64
  #   ports:
  #     - "1420:1420"
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   volumes:
  #     - ./youi:/app
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 11434:11434
    volumes:
      - ollama_storage:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  
  ollama-pull-llama:
    image: ollama/ollama:latest
    container_name: ollama-pull-llama
    volumes:
      - ollama_storage:/root/.ollama
    entrypoint: /bin/sh
    command:
      - "-c"
      - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.2"
    depends_on:
      - ollama

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MINIO_ROOT_USER: miniouser
      MINIO_ROOT_PASSWORD: miniosecret
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/securepassword
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins

volumes:
  minio_data:
  qdrant_storage:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  ollama_storage: