loglevel: info

s3:
    endpoint: "http://minio:9000"
    access_key: "miniouser"
    secret_key: "miniosecret"
    bucket: "amsh"

neo4j:
    uri: "neo4j://neo4j:7687"
    user: "neo4j"
    password: "securepassword"

ai:
    max_context_tokens: 128000
    max_iterations: 5
    prompt:
        system: |
            You are part of a system called The Ape Machine, an advanced multi-agent AI system, designed to perform tasks of any magnitude.
            You are a member of a team of agents, each specializing in a different aspect of the task at hand.

            YOUR IDENTIFIER: {name}
            YOUR ROLE      : {role}

            JOB DESCRIPTION:
            {job_description}

            Take a deep breath, let's think about this step by step, and good luck!
        sequencer:
            role: |
                You are a SEQUENCER, and your job is to coordinate the work of the other agents.
                You have also been provided with a set of tools, which you should use effectively.
        recruiter:
            role: |
                You are a RECRUITER, and your job is to recruit the right agents for the right job.
                You have also been provided with a set of tools, which you should use effectively.
        planner:
            role: |
                You are a PLANNER, and your job is to build practical plans, that can be followed to completion.
                You have also been provided with a set of tools, which you should use effectively.
        prompt_engineer:
            role: |
                You are a PROMPT ENGINEER, and your job is to translate user requests into clear and concise instructions for the other agents.
                You have also been provided with a set of tools, which you should use effectively.
        reasoner:
            role: |
                You are a REASONER, and your job is to provide the team with deep insight into the task at hand.
                You have also been provided with a set of tools, which you should use effectively.
        analyst:
            role: |
                You are an ANALYST, and your job is to provide the team with deep insight into the task at hand.
                You have also been provided with a set of tools, which you should use effectively.
        researcher:
            role: |
                You are a RESEARCHER, and your job is to search and discover information, from a variety of sources.
                You have also been provided with a set of tools, which you should use effectively.
        teamlead:
            role: |
                You are a TEAMLEAD, and your job is to coordinate the work of the team.
                You have also been provided with a set of tools, which you should use effectively.
        actor:
            role: |
                You are an ACTOR, and your job is to carry out tasks and execute plans.
                You have also been provided with a set of tools, which you should use effectively.
        processes:
            discussion: |
                The team will discuss the task at hand, and the best way to approach it.
                You will be provided with the discussion history, and you will be able to add your own thoughts.
                The discussion is governed by the TEAMLEAD.

toolsets:
    base:
        - set_state
        - memory
    sequencer:
        - inspect
        - assignment
        - worker
    planner:
        - work_items
        - slack
    prompt_engineer:
        - inspect
        - tweak
    researcher:
        - browser
    support:
        - helpdesk
    developer:
        - github
        - environment
tools:
    set_state:
        description: |
            Set your current state.
        parameters:
            state:
                type: string
                enum:
                    - ready
                    - thinking
                    - working
                    - waiting
                    - reviewing
                    - done
                description: |
                    The new state to set.
    inspect:
        description: |
            Inspect the current state of the system and get an overview of everything.
        parameters:
            scope:
                type: string
                description: |
                    Set a scope for inspection.
                enum:
                    - system
                    - memory
                    - team
            identifier:
                type: string
                description: |
                    Any ID, or all to list anything under that scope.
    tweak:
        description: |
            Tweak the system prompt of an agent, to improve and optimize its performance.
        parameters:
            agent:
                type: string
                description: |
                    The agent identifier to optimize.
            system:
                type: string
                description: |
                    The new optimized system prompt for the agent.
    assignment:
        description: |
            Assign a workload to a team.
        parameters:
            role:
                type: string
                description: |
                    The role to assign the workload to.
            workload:
                type: string
                description: |
                    The workload to assign to the team.
    worker:
        description: |
            Create a new worker for any kind of task.
        parameters:
            system_prompt:
                type: string
                description: |
                    The system prompt for the worker.
            user_prompt:
                type: string
                description: |
                    The user prompt for the worker.
            toolset:
                type: string
                description: |
                    The toolset to use for the worker.
    memory:
        description: |
            Manage persistent memory.
        parameters:
            store:
                type: string
                description: |
                    The store to manage.
                    Use the vector store for unstructured data.
                    Use the graph store only if you need to store relationships between data points.
                enum:
                    - vector
                    - graph
            operation:
                type: string
                description: |
                    The operation to perform on the memory.
                enum:
                    - add
                    - update
                    - search
            data:
                type: string
                description: |
                    Used for both data if you are adding or updating, and query if you are searching.
                    When using the vector store, the data should be plain text, without any formatting.
                    When using the graph store, the data should be a valid cypher query.
    work_items:
        description: |
            Manage work items in the project management system, hosted on Azure DevOps Boards.
        parameters:
            operations:
                type: string
                description: |
                    The operations to perform on the work items.
                enum:
                    - fetch
                    - search
                    - create
                    - update
            id:
                type: integer
                description: |
                    The ID of the work item to fetch, or update.
                    Set to 0 if not needed.
            title:
                type: string
                description: |
                    The title of the work item, if you are creating or updating a new work item.
                    Set to none if not needed.
            description:
                type: string
                description: |
                    The description of the work item, if you are creating or updating a new work item.
                    Set to none if not needed.
            parent_id:
                type: string
                description: |
                    The ID of the parent work item, if you are creating a new work item.
                    Set to none if not needed.
            workitem_type:
                type: string
                description: |
                    The type of work item to create, if you are creating a new work item.
                    Set to none if not needed.
            keywords:
                type: string
                description: |
                    The keywords to search for work items, separated by commas.
                    Set to none if not needed.
    helpdesk:
        description: |
            Manage helpdesk tickets in Trengo.
        parameters:
            operation:
                type: string
                description: |
                    The operation to perform on the helpdesk tickets.
                enum:
                    - fetch
                    - search
                    - label
            id:
                type: string
                description: |
                    The ID of the helpdesk ticket to fetch, or label.
                    Set to 0 if not needed.
            labels:
                type: string
                description: |
                    The labels to add to the helpdesk ticket, separated by commas.
                    Set to none if not needed.
            keywords:
                type: string
                description: |
                    The keywords to search for helpdesk tickets or messages.
                    Set to none if not needed.
    slack:
        description: |
            Interact with Slack.
        parameters:
            operation:
                type: string
                description: |
                    The operation to perform on the Slack messages or channels.
                enum:
                    - search
                    - send
            id:
                type: string
                description: |
                    The ID of the Slack channel or user to send a message to.
                    Set to none if not needed.
            message:
                type: string
                description: |
                    The message to send to the Slack channel or user.
                    Set to none if not needed.
            keywords:
                type: string
                description: |
                    The keywords, or valid Slack search query, to search for Slack messages.
                    Set to none if not needed.
    github:
        description: |
            Interact with GitHub.
        parameters:
            operation:
                description: |
                    The operation to perform on the GitHub repository.
                enum:
                    - search
                    - review
            pr:
                type: integer
                description: |
                    The ID of the pull request to review.
                    Set to 0 if not needed.
            review:
                description: |
                    The review of the pull request.
                    Set to none if not needed.
            approved:
                description: |
                    Whether the pull request is approved or not.
                    Set to none if not needed.
    browser:
        description: |
            Interact with the web browser.
        parameters:
            url:
                type: string
                description: |
                    The URL to navigate to.
            javascript:
                type: string
                description: |
                    A JavaScript function that returns a string. 
                    This function will be executed on the page via the developer console. 
                    Example: '() => { return document.title; }' to get the page title. 
                    Be mindful of context length, and if you want to retrieve page content, which can be very large, you should make sure your script includes a way to strip away useless content.
    environment:
        description: |
            Interact with a full Debian Linux environment.
            You will be connected directly to the stdin and stdout of the environment.
        parameters:
            name:
                type: string
                description: |
                    The name of the environment to start.
